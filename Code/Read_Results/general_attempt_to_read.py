import pandas as pd 
from matplotlib import pyplot as plt
from clean_SCIP_results import *

"""
Tries to read results of a specific type. Can either read tables like this

N Years | Objective Value | Dual Bound | Time | Gap
1       |    28.8     |    28.8    | 0.15 | 0.00
2       |    56.1     |    56.1    | 0.32 | 0.00
3       |    82.4     |    82.4    | 0.68 | 0.00

or SCIP (8) logs

time | node  | left  |LP iter|LP it/n|mem/heur|mdpt |vars |cons |rows |cuts |sepa|confs|strbr|  dualbound   | primalbound  |  gap   | compl.
o 6.0s|     1 |     0 | 19611 |     - |feaspump|   0 |5179 |3707 |  10k|   0 |  0 |   0 |   0 | 3.891981e+02 | 3.475789e+02 |  11.97%| unknown
  6.3s|     1 |     0 | 21326 |     - |    84M |   0 |5179 |3707 |  11k| 952 |  1 |   0 |   0 | 3.849358e+02 | 3.475789e+02 |  10.75%| unknown
  6.3s|     1 |     0 | 21656 |     - |    86M |   0 |5179 |3707 |  12k|1593 |  2 |   0 |   0 | 3.844127e+02 | 3.475789e+02 |  10.60%| unknown
  6.4s|     1 |     0 | 22000 |     - |    88M |   0 |5179 |3707 |  12k|1959 |  3 |   0 |   0 | 3.841999e+02 | 3.475789e+02 |  10.54%| unknown

although some care is needed in the later case (some things have to be manually removed, but not many)

"""


def get_data(file):
    df = pd.read_csv(file, sep="|")
    df.reset_index(drop=True, inplace=True)
    #df = df.apply(lambda x: x.str.strip() if type(x) == str else x)
    df.replace(" ","", inplace=True)
    df.columns = df.columns.str.replace(" ", "")
    #print(df[df["NYears"]<=20])
    #df.drop(df[int(df["NYears"]) >= 20], inplace=True)
    return df

def get_data_from_scip(file, clean_df=False):
    # you may need to manually remove some things
    
    if clean_df:
        remove_presolve(file)
    df = pd.read_csv(file, sep="|")
    df.replace(" ", "", inplace=True)
    df.columns = df.columns.str.replace(" ","")
    df = df[["time", "primalbound", "gap"]]
    df = df[~df["primalbound"].astype(str).str.contains("--")] # trying to remove lines with no incumbent
    df["time"] = df["time"].map(lambda x: x.lstrip('L*ropd').rstrip('s')).astype(float)
    #df["primalbound"] = df[str(df["primalbound"]).contains("--")==False]
    df["primalbound"] = df["primalbound"].astype(str).map(lambda x: x.rstrip('+02')).astype(float)
    df["primalbound"] = df["primalbound"].astype(str).map(lambda x: x.rstrip('+03')).astype(float)
    return df

def get_relevant_files(files):
    root = "/home/dionisio/Desktop/Doutoramento/Trabalho/Models/PySCIPOpt/Results/"
    return [root + i for i in files]

def get_relevant_logs(files):
    root = "/home/dionisio/Desktop/Doutoramento/Trabalho/Models/PySCIPOpt/Results/"
    end = "_log.txt"
    return [root + i + end for i in files]

def join_iterative_iterations(df):
    """
    Picks up a run of iterative refinement (for just one year) and combines all iterations into one dataframe
    """
    shifts = [(df.index[0],0)]
    for i in range(df.index[1], len(df)):
        if df.loc[i,"time"] < df.loc[i-1,"time"] or df.loc[i,"gap"] > df.loc[i-1,"gap"]:
            shifts.append((i,df.loc[i-1,"time"] + shifts[-1][1]))
    shifts.append((float("inf"),float("inf")))
    counter = 0
    i = df.index[0]
    #print(shifts)
    #i = 0
    while i <= len(df):
        if i >= shifts[counter+1][0]:
            counter+=1
        df.loc[i,"time"] += shifts[counter][1]
        i+=1 
    return [df, shifts]

def plot_log_evolution(file_names = [["create_20y","iterative_20y"], ["create_50y","iterative_50y"], ["create_100y","iterative_100y"]]):
    for index, file_names in enumerate(file_names):
        file_names = get_relevant_logs(file_names)
        max_time = -1
        max_primalbound = -1
        min_primalbound = float("inf")
        for file in file_names:
            df = get_data_from_scip(file, clean_df=True)
            #return df
            if "iterative" in file:
                df, shifts = join_iterative_iterations(df)
                label = "iterative refinement"
                with pd.option_context('display.max_rows', None, 'display.max_columns', None):  # more options can be specified also
                    print(df)
                for shift in shifts[1:-1]:
                    pass#plt.scatter(df["time"].iloc[[shift[0]]], df["primalbound"].iloc[[shift[0]]], color="red", marker="x")
                    #plt.scatter(df["time"].iloc[[shift[0]]], df["primalbound"].iloc[[shift[0]]])
            else:
                label = "original model"
            time = df["time"]
            incumbent = df["primalbound"]
            gap = df["gap"]
            plt.plot(time, incumbent, label=label)
            max_time = max(max_time,max(df["time"]))
            max_primalbound = max(max_primalbound,max(df["primalbound"]))
            min_primalbound = min(min_primalbound, max(min(df["primalbound"]),0))
        plt.xlim(0,max_time)
        plt.ylim(0.75*min_primalbound, 1.1*max_primalbound)
        plt.xlabel("Time (s)")
        plt.ylabel("Incumbent")

        handles, labels = plt.gca().get_legend_handles_labels()
        #handles.append(plt.Line2D([], [], color="red", label="Iteration start", marker="x", linewidth=0))

        plt.legend(handles = handles, loc = (0.6,0.4))
        if "20" in file:
            plt.savefig("/home/dionisio/Desktop/Doutoramento/Trabalho/Media/create_vs_iterative_20y.png",bbox_inches='tight')
        elif "50" in file:
            plt.savefig("/home/dionisio/Desktop/Doutoramento/Trabalho/Media/create_vs_iterative_50y.png",bbox_inches='tight')
        elif "100" in file:
            plt.savefig("/home/dionisio/Desktop/Doutoramento/Trabalho/Media/create_vs_iterative_100y.png",bbox_inches='tight')
        plt.show()
    return 


def plot_yearly_data(file_names):
    files = get_relevant_files(file_names)
    time = []
    gap = []
    plt.figure()
    colors = ["green", "blue", "red", "brown"]
    names = ["create_model", "iterative_refinement", "cbm"]
    #plt.title("Comparison of methods in regards to: Time to optimality (in minutes, until n=16); Incumbent and Primal-Dual Gap at 10000s (from n=17)")
    for i in range(len(files)):
        #file = "/home/dionisio/Desktop/Doutoramento/Trabalho/Models/PySCIPOpt/Results/" + cur_algo + "_10PTs.txt"
        color = colors[i]
        name = names[i]
        cur_file = files[i]

        df = get_data(cur_file)
        df1 = df[df["NYears"] <= 20]
        df2 = df[df["NYears"] == 50]
        df3 = df[df["NYears"] == 100]
        df = df1

        x = df["NYears"]
        time = df["Time"]
        gap = df["Gap"]
        incumbent = df["ObjectiveValue"]
        
        plt.plot(x,time,label=name + " time (m)")
        #plt.plot(x,gap, label=name + " Gap", linestyle="dashed")
        #plt.plot(x,incumbent, label=name + " Incumbent")#, linestyle="dotted")
        
        #plt.plot(x,time, color=color)
        #plt.plot(x,gap, linestyle="dashed", color=color)
        #plt.plot(x,incumbent, color=color)#, linestyle="dotted")

    lines = plt.gca().get_lines()
    #legend1 = plt.legend([lines[i] for i in [0,3,6]],[lines[i].get_label() for i in [0,3,6]], loc="center left", prop={"size":15})
    #legend2 = plt.legend([lines[i] for i in [1,4,7]],[lines[i].get_label() for i in [1,4,7]], loc="lower right", prop={"size":15})
    #legend3 = plt.legend([lines[i] for i in [2,5,8]], [lines[i].get_label() for i in [2,5,8]], loc="center right", prop={"size":13})
    #plt.gca().add_artist(legend1)
    #plt.gca().add_artist(legend2)
    #plt.gca().add_artist(legend3)
    
    # to draw vertical lines
    #plt.axvline(x=16)
    #plt.axvline(x=17)
    
    #plt.xticks([1,3,5,7,9,11,13,15,16,17,19])
    
    #manager = plt.get_current_fig_manager()
    #manager.resize(*manager.window.maxsize())
    #plt.savefig("/home/dionisio/Desktop/Doutoramento/Trabalho/Media/10PTs_results.png",bbox_inches='tight')
    plt.show()
    return

def small_script_for_reading_all_instances():
    from numpy import mean, median
    for i in range(0,211,10):
        cur_year = all_instances_iterative_refinement[i:i+10]
        obj, gap, time, iterations = [[k[j] for k in cur_year] for j in range(4)]
        print(mean(obj))
        #print(mean([j[0] for j in cur_year]))    

#plot_data(["multiple_pts","model_quickstart","divide_and_conquer"])
#plot_data(["create_model.txt", "iterative_refinement.txt", "cbm.txt"])
#plot_data(["multiple_pts_10PTs","model_quickstart_10PTs","divide_and_conquer"])
if __name__ == "__main__":
    #get_data_from_scip("/home/dionisio/Desktop/Doutoramento/Trabalho/Models/PySCIPOpt/Results/create_20y_log.txt")
    plot_log_evolution([["create_50y","iterative_50y"],["create_100y","iterative_100y"]])#["create_100y", "iterative_100y"])#["/home/dionisio/Desktop/Doutoramento/Trabalho/Models/PySCIPOpt/Results/create_20y_log.txt","/home/dionisio/Desktop/Doutoramento/Trabalho/Models/PySCIPOpt/Results/create_50y_log.txt","/home/dionisio/Desktop/Doutoramento/Trabalho/Models/PySCIPOpt/Results/create_100y_log.txt"])




# sorry :(
all_instances_iterative_refinement = [[44.402504133960825, 0.04577697605966087, 0.1163489818572998, 46.43511650269014], [30.29895743619387, 0.02217954307545553, 0.11447596549987793, 30.970974467791326], [40.16871786395086, 0.012559363032806846, 0.11924004554748535, 40.67321137416661], [24.61182522247161, 2.2479796525631354e-05, 0.12254118919372559, 24.612378491294734], [34.25756609685796, 0.0038245142402169095, 0.12457704544067383, 34.38858464623056], [33.51876861689, 2.5148125004961345e-05, 0.12029910087585449, 33.51961155107319], [36.7998849281058, 0.038830949421889985, 0.10718417167663574, 38.228859398480445], [40.953799152093424, 9.933118295683863e-06, 0.09841585159301758, 40.95420595102506], [46.59723793993198, 1.668952968486164e-05, 0.09750199317932129, 46.59801562591781], [31.89257953660567, 0.03580092040930828, 0.150252103805542, 33.03436323824322], [81.162449147092, 0.02566636175840736, 0.5032267570495605, 83.24559392809961], [58.0073913391358, 0.011271174323731214, 0.26836204528808594, 58.661202758984096], [79.97334936554776, 0.011964776692268335, 0.3033428192138672, 80.9302126320393], [40.53100394510204, 6.645352626861062e-05, 0.24517202377319336, 40.5336973732374], [63.37334371818978, 0.0020499107608176292, 0.24445271492004395, 63.50325341742669], [66.06051120632566, 4.242835865396497e-05, 0.40358805656433105, 66.06331404538798], [67.90190780339861, 0.020626960123641486, 0.27603578567504883, 69.3025177479785], [77.27863475632044, 2.9713706062393825e-05, 0.21560096740722656, 77.2809309909585], [81.59995598290199, 4.750469609984814e-05, 0.2554948329925537, 81.60383236401272], [56.92870406027999, 0.032331644058106644, 0.29182887077331543, 58.76930265664625], [104.38891231359095, 0.01951509421248913, 0.453218936920166, 106.42607177212994], [81.09870150796345, 0.007854382652911487, 0.48449182510375977, 81.73568174226125], [119.58440859730091, 0.010047284939100983, 0.5057511329650879, 120.78590722475187], [49.45105095753886, 0.0003641339964530487, 0.4976801872253418, 49.46905776635283], [86.0129119391608, 0.001511607196001633, 0.38819098472595215, 86.14292967579709], [96.77119153459955, 7.734535215261547e-05, 0.3497791290283203, 96.77867633648702], [90.0954431051895, 0.015270483517844595, 0.49875712394714355, 91.4712440841602], [107.83119352733385, 4.622782146851418e-05, 0.4458489418029785, 107.83617832849697], [103.59262317943691, 0.00012571036295690337, 0.49793577194213867, 103.60564584569646], [73.70404681837721, 0.02421717964866409, 0.5338292121887207, 75.4889509610114], [114.70325146925245, 0.03314418876965386, 0.7032670974731445, 118.50499768844243], [98.15394001748236, 0.021447229249633812, 0.8157532215118408, 100.2590700707921], [158.97477522424995, 0.007722305162944897, 1.0601921081542969, 160.20242695174218], [53.57923782505418, 0.0011961117708095236, 0.7881190776824951, 53.64332458208773], [102.47502198551582, 0.001333571352776986, 0.5762689113616943, 102.6116797392109], [124.63771790733766, 0.00011169519316075797, 0.6286530494689941, 124.65163934131444], [101.78243830219321, 0.03724948779743815, 0.7207059860229492, 105.57378199572426], [131.47384459808697, 8.085134726504622e-05, 0.5020532608032227, 131.48447443555284], [115.12540609950919, 0.0004883785384167928, 0.7875871658325195, 115.18163087707471], [83.20110831256947, 0.025591484477342618, 0.7245948314666748, 85.3303481844483], [119.77448546693651, 0.03207091568302644, 0.9834671020507812, 123.61576289132451], [112.55626701377987, 0.018260273705704582, 1.0123090744018555, 114.61157525674386], [197.83908800276063, 0.006172608471320011, 0.9895641803741455, 199.0602712333247], [54.88745611966078, 8.53664485082341e-05, 0.762531042098999, 54.89214166685737], [113.60503015297587, 0.0014618527757220903, 0.9505648612976074, 113.77110398164099], [146.72327487616437, 0.019499725506710922, 1.0626580715179443, 149.58433846169527], [109.62306101670123, 0.0345220046653945, 1.0309038162231445, 113.40746884055461], [149.11871322102866, 0.00017454748026567924, 0.9196920394897461, 149.14474151668185], [119.70339798569063, 8.030402992904478e-05, 0.9759330749511719, 119.71301065094508], [88.70669649731661, 0.020688475458728543, 1.0997931957244873, 90.54190281082623], [66.28851365179612, 0.026193432958267742, 1.2000548839569092, 68.02483739003766], [124.35116857819077, 0.005142687022505766, 1.1081249713897705, 124.99066771907125], [235.7264004205436, 0.005131095005242837, 1.4827351570129395, 236.93593497634532], [57.72451203720135, 0.0, 42.12890100479126, 57.72451203720135], [120.44745621172729, 0.0019461952091626485, 1.501715898513794, 120.68187047396238], [171.58907695905742, 0.00017048023124675968, 0.7669079303741455, 171.61832950457682], [113.24943950649782, 0.03383434866274043, 1.3336269855499268, 117.0811605286206], [161.00974242795908, 0.00040994759105659594, 1.3690030574798584, 161.07574798400407], [132.64720135520867, 0.0, 5.841520071029663, 132.64720135520867], [90.76718661971361, 0.021456467218043312, 1.5742919445037842, 92.71472978389352], [139.30345781182965, 0.0, 6.580886125564575, 139.30345781182965], [130.19818252631103, 0.01591282265206308, 1.9789741039276123, 132.27000311447316], [272.27133008694443, 0.004379790969617235, 1.2303643226623535, 273.4638215997449], [58.25908484045462, 0.0, 33.705350160598755, 58.25908484045462], [124.1687428450786, 0.0027610554984770714, 1.7379729747772217, 124.51157963524999], [190.70560025504582, 0.00020660382636607434, 1.0579140186309814, 190.74500076176795], [100.3258706203344, 0.009218205364179402, 1.7109761238098145, 101.25069509905273], [168.40173458696765, 0.0008307971744378496, 1.7120897769927979, 168.54164227223293], [135.17485760242815, 0.0, 17.45725679397583, 135.17485760242815], [100.1070411337265, 0.0, 39.55231475830078, 100.1070411337265], [136.46426530478402, 0.0, 36.764265060424805, 136.46426530478402], [134.975041388043, 0.01602264002718822, 2.6726129055023193, 137.13769788885844], [307.07109261456515, 0.003829264067223868, 1.2266929149627686, 308.2469489155973], [57.49184792240622, 0.0, 15.718420028686523, 57.49184792240622], [125.61359760468243, 0.0037120232949431732, 2.406765937805176, 126.07987820515262], [206.88117588437404, 0.0002629273087450875, 1.1851780414581299, 206.93557059517934], [131.0255976725842, 0.0, 30.422613859176636, 131.0255976725842], [172.41748403463436, 0.001425141690553957, 2.1249899864196777, 172.66320337931253], [133.5469634888891, 0.0, 16.32824993133545, 133.5469634888891], [101.41940459028027, 0.0, 26.17076873779297, 101.41940459028027], [138.25835217447337, 0.0, 43.327335834503174, 138.25835217447337], [154.6970164785519, 0.0, 10.67544412612915, 154.6970164785519], [340.10887291166426, 0.004044336574206092, 1.68351411819458, 341.4843876655929], [56.03848566338157, 0.0, 18.076533317565918, 56.03848566338157], [137.7470600737242, 0.0, 43.25811505317688, 137.7470600737242], [220.20933901130252, 0.0010126614389377455, 1.3879032135009766, 220.43233651741323], [132.09095107348472, 0.0, 27.514700174331665, 132.09095107348472], [173.89646772732863, 0.0008370509928982635, 1.34098482131958, 174.0420279383013], [133.5103790324728, 0.0, 34.54400682449341, 133.5103790324728], [101.00078029630804, 0.0, 32.5823290348053, 101.00078029630804], [138.35290982749277, 0.0, 36.288475036621094, 138.35290982749277], [139.12620886908607, 0.046416697694667865, 1.4157750606536865, 145.58398804756766], [370.8893710688761, 0.01683422041360023, 3.0128557682037354, 377.1330044905111], [54.665564814960945, 0.0, 30.72653317451477, 54.665564814960945], [139.63622380430863, 0.0, 32.32705903053284, 139.63622380430863], [251.88326429080104, 0.0, 11.871290922164917, 251.88326429080104], [132.31080098677398, 0.0, 29.113068103790283, 132.31080098677398], [198.08090330418472, 0.0, 12.83435320854187, 198.08090330418472], [134.09899949572537, 0.0, 56.18826985359192, 134.09899949572537], [99.35978007348383, 0.0, 25.81713604927063, 99.35978007348383], [138.71755692301923, 0.0, 66.0080258846283, 138.71755692301923], [163.1077329469236, 0.0, 28.215609073638916, 163.1077329469236], [415.37570817065966, 0.0, 12.239445924758911, 415.37570817065966], [52.66124605724983, 0.0, 30.625519275665283, 52.66124605724983], [140.83084320163192, 0.0, 30.386840105056763, 140.83084320163192], [266.26285784005677, 0.0, 14.4291832447052, 266.26285784005677], [130.63134729395577, 0.0, 59.92747211456299, 130.63134729395577], [200.5641844845553, 0.0, 12.101973056793213, 200.5641844845553], [134.15663323981173, 0.0, 53.40137982368469, 134.15663323981173], [99.30792046030221, 0.0, 43.97988295555115, 99.30792046030221], [138.57073833056114, 0.0, 73.58736801147461, 138.57073833056114], [165.14925223599803, 0.0, 15.401260137557983, 165.14925223599803], [448.363339199835, 0.0, 12.993748903274536, 448.363339199835], [54.17886243839471, 0.0, 25.792464017868042, 54.17886243839471], [140.6482511072114, 0.0, 54.80034899711609, 140.6482511072114], [278.1610368835544, 0.0, 18.37373399734497, 278.1610368835544], [131.64394249896432, 0.0, 61.74313402175903, 131.64394249896432], [202.83315587037356, 0.0, 16.207149028778076, 202.83315587037356], [133.01063786699004, 0.0, 36.69024109840393, 133.01063786699004], [99.70296541105773, 0.0, 116.92730402946472, 99.70296541105773], [137.81432158193502, 0.0, 66.12793397903442, 137.81432158193502], [167.2779132270711, 0.0, 18.64926528930664, 167.2779132270711], [479.95345527853465, 0.0, 11.043071031570435, 479.95345527853465], [52.77828514220983, 0.0, 27.211392879486084, 52.77828514220983], [138.48461973551846, 0.0, 37.45042395591736, 138.48461973551846], [289.13200031231577, 0.0, 35.1545889377594, 289.13200031231577], [132.01695544163752, 0.0, 69.2311019897461, 132.01695544163752], [201.8734413142786, 0.0, 23.497500896453857, 201.8734413142786], [133.01673848046045, 0.0, 41.0134379863739, 133.01673848046045], [99.40226372075279, 0.0, 75.44572305679321, 99.40226372075279], [137.10050078543642, 0.0, 64.67630529403687, 137.10050078543642], [168.32836110433405, 0.0, 17.812408208847046, 168.32836110433405], [510.0783212756758, 0.0, 15.705879926681519, 510.0783212756758], [51.924063778241674, 0.0, 41.203782081604004, 51.924063778241674], [139.08625077179886, 0.0, 36.49253988265991, 139.08625077179886], [298.6483885445165, 0.0, 38.95686197280884, 298.6483885445165], [174.52780261010804, 0.0, 400.04860281944275, 174.52780261010804], [202.96483757669662, 0.0, 22.39054274559021, 202.96483757669662], [130.63278088864092, 0.0, 74.52399015426636, 130.63278088864092], [99.56972464775856, 0.0, 99.65494704246521, 99.56972464775856], [134.54552485799826, 0.0, 101.4945638179779, 134.54552485799826], [168.06633008331977, 0.0, 37.54152703285217, 168.06633008331977], [538.7609853500436, 0.0, 21.553121089935303, 538.7609853500436], [49.50008482234148, 0.0, 104.23127293586731, 49.50008482234148], [139.99083690477255, 0.0, 65.31952905654907, 139.99083690477255], [306.0811585473587, 0.0, 44.5706570148468, 306.0811585473587], [179.2204760466709, 0.0, 2393.240040063858, 179.2204760466709], [203.05900850367752, 0.0, 49.26781702041626, 203.05900850367752], [129.85414608129582, 0.0, 106.78899478912354, 129.85414608129582], [98.9253341379479, 0.0, 87.16183304786682, 98.9253341379479], [133.9291102791985, 0.0, 117.56588792800903, 133.9291102791985], [168.40450336544438, 0.0, 33.59565591812134, 168.40450336544438], [565.8939045355678, 0.0, 17.596050024032593, 565.8939045355678], [49.38418435764116, 0.0, 91.53087401390076, 49.38418435764116], [140.15653985239626, 0.0, 69.93398404121399, 140.15653985239626], [337.7698251701549, 0.0, 62.437309980392456, 337.7698251701549], [166.62811832752396, 0.0, 350.79040813446045, 166.62811832752396], [203.2837717700636, 0.0, 41.74144887924194, 203.2837717700636], [129.60537334617464, 0.0, 91.01209306716919, 129.60537334617464], [97.20169380610874, 0.0, 105.50332999229431, 97.20169380610874], [133.91921130144127, 0.0, 109.35268473625183, 133.91921130144127], [169.3096424019009, 0.0, 55.275144815444946, 169.3096424019009], [593.549726731015, 0.0, 47.77985906600952, 593.549726731015], [48.700812199882805, 0.0, 65.98205280303955, 48.700812199882805], [174.15346301429526, 0.0, 262.75599575042725, 174.15346301429526], [347.1444228661771, 0.0, 64.0773561000824, 347.1444228661771], [190.99716671059645, 0.0, 6692.669370174408, 190.99716671059645], [204.46374516789078, 0.0, 63.28965711593628, 204.46374516789078], [182.92599667836328, 0.0, 403.26158595085144, 182.92599667836328], [94.71939782625753, 0.0, 94.2288510799408, 94.71939782625753], [179.6301961170801, 0.0, 534.8451237678528, 179.6301961170801], [170.01698711251248, 0.0, 62.06449103355408, 170.01698711251248], [622.8500954308538, 0.0, 66.22311592102051, 622.8500954308538], [48.64826400508035, 0.0, 304.57562279701233, 48.64826400508035], [197.96788612289865, 0.03476567417817095, 7200.423448085785, 204.8503731495886], [356.6896036579402, 0.0, 107.28350377082825, 356.6896036579402], [202.21811135245056, 0.05379521642983503, 7218.488259792328, 213.09647841868812], [204.32219439908988, 0.0, 56.532814025878906, 204.32219439908988], [218.22364683994056, 0.05317740928784894, 7200.414135217667, 229.82821502423508], [94.05357632773188, 0.0, 297.95352387428284, 94.05357632773188], [208.43632511352186, 0.06939854865206377, 7200.356086969376, 222.90150356277], [170.56976021199378, 0.0, 75.53652882575989, 170.56976021199378], [651.4906430424187, 0.0, 108.39549279212952, 651.4906430424187], [46.38458533162633, 0.0, 722.5668449401855, 46.38458533162633], [187.66290024374285, 0.0, 405.8260669708252, 187.66290024374285], [364.0184905827462, 0.0, 91.5322048664093, 364.0184905827462], [207.13304592475612, 0.06975621145002833, 7215.2322680950165, 221.58186247457184], [204.41832550895282, 0.0, 76.88959908485413, 204.41832550895282], [226.61112344835334, 0.2278037918286144, 7200.659821033478, 278.23399664043046], [116.38788161038387, 0.0, 879.0572719573975, 116.38788161038387], [212.83125816727906, 0.08394898215305183, 7200.469689846039, 230.69822566077553], [171.0017393385056, 0.0, 80.3053810596466, 171.0017393385056], [692.3475399534437, 0.0, 379.00672006607056, 692.3475399534437], [45.4310473301269, 0.0, 498.37504291534424, 45.4310473301269], [209.9934803162234, 0.1134301626314437, 7200.661021947861, 233.8130749400355], [424.0320495106107, 0.0, 684.1685938835144, 424.0320495106107], [211.56395989801726, 0.10932093806899969, 7200.623846769333, 234.69233045566074], [204.0775021854316, 0.0, 124.03902196884155, 204.0775021854316], [227.80565112196473, 0.14461645246229818, 7201.16238284111, 260.7500962380872], [122.96397263791653, 0.08653508893524298, 7200.419036865234, 133.60467094596942], [259.3299213493762, 0.6242791932172144, 7200.805411815643, 421.22419542644843], [393.1408025799325, 0.1780107214196838, 7201.304595947266, 463.12408046669975], [1603.096665978556, 0.03835043978402057, 7201.040910720825, 1664.5761281351308], [1.5753766840207817, 9.752895729002336, 7200.880580186844, 16.939861217176926], [327.08317754950633, 0.37761573723579367, 7201.0289850234985, 450.59493277728916], [906.176537113126, 0.17009632153702842, 7201.672780036926, 1060.3138327392312], [261.21447860063984, 0.563043355796579, 7200.687883853912, 408.2895552145978], [687.6628580101171, 0.20428863743704923, 7200.864733219147, 828.144566289071], [332.8628068244832, 0.46726711592382697, 7201.026861190796, 488.3986505676694], [154.3272708259268, 0.5221423291644708, 7200.874422073364, 234.9080714685723], [198.43219156235466, 1.4941355012452198, 7201.415874242783, 494.9167735655609], [572.638056386158, 0.4293481750155566, 7201.275590181351, 818.4991608400104], [2923.0306631372328, 0.0869962312259565, 7201.128085851669, 3177.3233145880804], [-74.73782413620478, 20.875370265531437, 7202.231909036636, -3.416528416616911], [472.01813100527124, 0.34420866872524825, 7200.419047832489, 634.4908634927755], [1467.4719834552727, 0.06482760390662867, 7200.912919998169, 1562.604675942786], [201.73095091163816, 1.3178964691607662, 7200.411050319672, 467.59145883852995], [1029.0563531156993, 0.26744397079727006, 7201.356336116791, 1304.2712703671195], [353.54404848803733, 0.4922744586244066, 7201.537145137787, 527.5847535573669], [135.37415322171148, 0.9277203692187287, 7200.841161966324, 260.9635126312304]]
